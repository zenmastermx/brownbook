appHosting:
  build:
    outputDir: build/web
    scripts:
      - build: |
          # Install Flutter
          if [ ! -d "/opt/flutter" ]; then
            echo "Installing Flutter..."
            curl -sSL https://storage.googleapis.com/flutter_infra_release/releases/stable/linux/flutter_linux_3.24.3-stable.tar.xz -o /tmp/flutter.tar.xz
            mkdir -p /opt
            tar -xf /tmp/flutter.tar.xz -C /opt
            rm /tmp/flutter.tar.xz
            export PATH="/opt/flutter/bin:$PATH"
          else
            export PATH="/opt/flutter/bin:$PATH"
          fi

          # Verify Flutter installation
          flutter --version

          # Clean and build
          flutter clean
          flutter pub get
          flutter build web --web-renderer html

          # Create a simple Python HTTP server script
          cat > server.py << 'EOF'
          import http.server
          import socketserver
          import os
          import sys

          PORT = int(os.environ.get('PORT', 8080))

          class MyHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
              def __init__(self, *args, **kwargs):
                  super().__init__(*args, directory='build/web', **kwargs)

              def end_headers(self):
                  self.send_header('Cache-Control', 'no-cache, no-store, must-revalidate')
                  self.send_header('Pragma', 'no-cache')
                  self.send_header('Expires', '0')
                  super().end_headers()

          Handler = MyHTTPRequestHandler

          with socketserver.TCPServer(("", PORT), Handler) as httpd:
              print(f"Server running on port {PORT}")
              try:
                  httpd.serve_forever()
              except KeyboardInterrupt:
                  print("\nServer stopped.")
                  httpd.shutdown()
          EOF
  run:
    outputDir: build/web
    scripts:
      - start: python3 server.py
